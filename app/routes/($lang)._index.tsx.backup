import { useParams } from "react-router";

export async function serverLoader({ params }: { params: { lang?: string; }; }) {
  const validLanguages = ['en', 'fr', 'es', 'de'];

  if (params.lang && !validLanguages.includes(params.lang)) {
    throw new Response("Not Found", { status: 404 });
  }

  return { lang: params.lang || 'en' };
}

export default function LanguageHomePage() {
  const params = useParams();
  const lang = params.lang || 'en';

  const validLanguages = ['en', 'fr', 'es', 'de'];

  if (params.lang && !validLanguages.includes(params.lang)) {
    return null;
  }

  const messages = {
    en: {
      welcome: "Welcome to our multilingual site!",
      description: "This page demonstrates React Router 7's optional segments feature",
      currentLang: "Current language",
      routing: "File-based Routing",
      routingDesc: "Clean URL structure with optional language prefixes",
      shopLink: "Visit our shop",
      blogLink: "Read our blog"
    },
    fr: {
      welcome: "Bienvenue sur notre site multilingue!",
      description: "Cette page dÃ©montre les segments optionnels de React Router 7",
      currentLang: "Langue actuelle",
      routing: "Routage basÃ© sur fichiers",
      routingDesc: "Structure d'URL propre avec prÃ©fixes de langue optionnels",
      shopLink: "Visitez notre boutique",
      blogLink: "Lisez notre blog"
    },
    es: {
      welcome: "Â¡Bienvenido a nuestro sitio multilingÃ¼e!",
      description: "Esta pÃ¡gina demuestra los segmentos opcionales de React Router 7",
      currentLang: "Idioma actual",
      routing: "Enrutamiento basado en archivos",
      routingDesc: "Estructura de URL limpia con prefijos de idioma opcionales",
      shopLink: "Visita nuestra tienda",
      blogLink: "Lee nuestro blog"
    }
  };

  const currentMessages = messages[lang as keyof typeof messages] || messages.en;

  return (
    <div className="max-w-4xl mx-auto py-8 px-4">
      <div className="mb-8 flex justify-center flex-wrap gap-2">
        <a
          href="/"
          className={lang === 'en' ? 'bg-blue-600 text-white border-blue-600 px-4 py-2 rounded-lg border font-medium' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50 px-4 py-2 rounded-lg border font-medium'}
        >
          ðŸ‡ºðŸ‡¸ EN
        </a>
        <a
          href="/fr"
          className={lang === 'fr' ? 'bg-blue-600 text-white border-blue-600 px-4 py-2 rounded-lg border font-medium' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50 px-4 py-2 rounded-lg border font-medium'}
        >
          ðŸ‡«ðŸ‡· FR
        </a>
        <a
          href="/es"
          className={lang === 'es' ? 'bg-blue-600 text-white border-blue-600 px-4 py-2 rounded-lg border font-medium' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50 px-4 py-2 rounded-lg border font-medium'}
        >
          ðŸ‡ªðŸ‡¸ ES
        </a>
      </div>

      <div className="text-center mb-8">
        <h1 className="text-4xl font-bold text-blue-600 mb-4">
          {currentMessages.welcome}
        </h1>

        <p className="text-gray-700 text-lg mb-6">
          {currentMessages.description}
        </p>

        <div className="mb-8 p-4 bg-blue-100 border border-blue-300 rounded-lg">
          <p className="text-blue-800">
            <strong>{currentMessages.currentLang}:</strong>
            {lang === 'en' && ' ðŸ‡ºðŸ‡¸ EN'}
            {lang === 'fr' && ' ðŸ‡«ðŸ‡· FR'}
            {lang === 'es' && ' ðŸ‡ªðŸ‡¸ ES'}
          </p>
          <p className="text-sm text-blue-600 mt-2">
            Try: /, /fr, /es
          </p>
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div className="bg-green-100 p-6 rounded-lg border border-green-300">
          <h3 className="font-bold text-green-800 text-lg mb-2">
            {currentMessages.routing}
          </h3>
          <p className="text-green-700">{currentMessages.routingDesc}</p>
        </div>

        <div className="bg-purple-100 p-6 rounded-lg border border-purple-300">
          <h3 className="font-bold text-purple-800 text-lg mb-2">
            Optional Segments
          </h3>
          <p className="text-purple-700">Same route handles multiple URL patterns</p>
        </div>
      </div>

      <div className="text-center space-x-4">
        <a href="/shop" className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 inline-block">
          {currentMessages.shopLink}
        </a>
        <a href="/blog" className="bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 inline-block">
          {currentMessages.blogLink}
        </a>
      </div>
    </div>
  );
}