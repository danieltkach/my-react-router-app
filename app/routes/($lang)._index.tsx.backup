import { useParams } from "react-router";

export default function HomePage() {
  const params = useParams();

  // Define valid language codes
  const validLanguages = ['en', 'fr', 'es', 'de'];

  // If params.lang exists but is not a valid language, this shouldn't render
  if (params.lang && !validLanguages.includes(params.lang)) {
    // This route shouldn't handle non-language segments
    // Let other routes handle register, forgot-password, etc.
    return null;
  }

  const lang = params.lang || 'en';

  const messages = {
    en: {
      welcome: "Welcome to our site!",
      description: "This is the home page with international language support",
      currentLang: "Current language",
      features: "Features",
      routing: "File-based Routing",
      routingDesc: "Clean URL structure",
      tailwind: "Tailwind CSS v4",
      tailwindDesc: "Modern utility-first CSS",
      i18n: "Internationalization",
      i18nDesc: "Multi-language support"
    },
    fr: {
      welcome: "Bienvenue sur notre site!",
      description: "Ceci est la page d'accueil avec support de langue internationale",
      currentLang: "Langue actuelle",
      features: "Fonctionnalités",
      routing: "Routage basé sur fichiers",
      routingDesc: "Structure d'URL propre",
      tailwind: "Tailwind CSS v4",
      tailwindDesc: "CSS moderne utilitaire d'abord",
      i18n: "Internationalisation",
      i18nDesc: "Support multi-langues"
    },
    es: {
      welcome: "¡Bienvenido a nuestro sitio!",
      description: "Esta es la página de inicio con soporte de idioma internacional",
      currentLang: "Idioma actual",
      features: "Características",
      routing: "Enrutamiento basado en archivos",
      routingDesc: "Estructura de URL limpia",
      tailwind: "Tailwind CSS v4",
      tailwindDesc: "CSS moderno con utilidades primero",
      i18n: "Internacionalización",
      i18nDesc: "Soporte multi-idioma"
    },
    de: {
      welcome: "Willkommen auf unserer Seite!",
      description: "Dies ist die Startseite mit internationaler Sprachunterstützung",
      currentLang: "Aktuelle Sprache",
      features: "Funktionen",
      routing: "Dateibasiertes Routing",
      routingDesc: "Saubere URL-Struktur",
      tailwind: "Tailwind CSS v4",
      tailwindDesc: "Modernes Utility-First CSS",
      i18n: "Internationalisierung",
      i18nDesc: "Mehrsprachige Unterstützung"
    }
  };

  const currentMessages = messages[lang as keyof typeof messages] || messages.en;

  const getLanguageFlag = (language: string) => {
    const flags = {
      en: "🇺🇸",
      fr: "🇫🇷",
      es: "🇪🇸",
      de: "🇩🇪"
    };
    return flags[language as keyof typeof flags] || "🌐";
  };

  return (
    <div className="max-w-4xl mx-auto py-8">
      {/* Language Selector */}
      <div className="mb-6 flex justify-center space-x-2">
        {Object.keys(messages).map((language) => (
          <a
            key={language}
            href={language === 'en' ? '/' : `/${language}`}
            className={`px-4 py-2 rounded-lg border font-medium ${lang === language
              ? 'bg-blue-600 text-white border-blue-600'
              : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'
              }`}
          >
            {getLanguageFlag(language)} {language.toUpperCase()}
          </a>
        ))}
      </div>

      {/* Main Content */}
      <h1 className="text-4xl font-bold text-blue-600 mb-4 text-center">
        {currentMessages.welcome}
      </h1>

      <p className="text-gray-700 text-lg mb-6 text-center">
        {currentMessages.description}
      </p>

      {/* Current Language Display */}
      <div className="mb-8 p-4 bg-blue-100 border border-blue-300 rounded-lg text-center">
        <p className="text-blue-800">
          <strong>{currentMessages.currentLang}:</strong> {getLanguageFlag(lang)} {lang.toUpperCase()}
        </p>
        <p className="text-sm text-blue-600 mt-2">
          This route works for: <code>/</code>, <code>/en</code>, <code>/fr</code>, <code>/es</code>, <code>/de</code>
        </p>
      </div>

      {/* Features Grid */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-green-100 p-6 rounded-lg border border-green-300">
          <h3 className="font-bold text-green-800 text-lg mb-2">
            {currentMessages.routing}
          </h3>
          <p className="text-green-700">{currentMessages.routingDesc}</p>
        </div>

        <div className="bg-purple-100 p-6 rounded-lg border border-purple-300">
          <h3 className="font-bold text-purple-800 text-lg mb-2">
            {currentMessages.tailwind}
          </h3>
          <p className="text-purple-700">{currentMessages.tailwindDesc}</p>
        </div>

        <div className="bg-orange-100 p-6 rounded-lg border border-orange-300">
          <h3 className="font-bold text-orange-800 text-lg mb-2">
            {currentMessages.i18n}
          </h3>
          <p className="text-orange-700">{currentMessages.i18nDesc}</p>
        </div>
      </div>

      {/* URL Examples */}
      <div className="mt-8 p-4 bg-gray-100 rounded-lg">
        <h3 className="font-bold text-gray-800 mb-3">Try these URLs:</h3>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-2 text-sm">
          <a href="/" className="text-blue-600 hover:underline">/ (English)</a>
          <a href="/fr" className="text-blue-600 hover:underline">/fr (Français)</a>
          <a href="/es" className="text-blue-600 hover:underline">/es (Español)</a>
          <a href="/de" className="text-blue-600 hover:underline">/de (Deutsch)</a>
        </div>
      </div>
    </div>
  );
}